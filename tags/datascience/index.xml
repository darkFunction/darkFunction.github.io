<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Datascience on Sam Taylor</title>
    <link>https://darkfunction.github.io/tags/datascience/</link>
    <description>Recent content in Datascience on Sam Taylor</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Wed, 12 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://darkfunction.github.io/tags/datascience/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Datascience exploration 2: ELO performance vs bet profitability in tennis</title>
      <link>https://darkfunction.github.io/posts/elo-tennis/</link>
      <pubDate>Wed, 12 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://darkfunction.github.io/posts/elo-tennis/</guid>
      <description>I wrote a function to genetically evolve the parameters to an ELO algorithm (code not included here) and compared the performance of these parameters across bookmakers when using the ELO prediction to place hypothetical bets. Interestingly there is a tiny advantage if you can secure the absolute best odds. The underdogs with higher ELO looks too good to be true and that&amp;rsquo;s because the number of available bets where an underdog has a higher ELO is very small.</description>
    </item>
    
    <item>
      <title>Datascience exploration: WTA Height Advantages</title>
      <link>https://darkfunction.github.io/posts/wtaheightadv/</link>
      <pubDate>Tue, 11 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://darkfunction.github.io/posts/wtaheightadv/</guid>
      <description>I&amp;rsquo;ve been playing with Pandas and the Jupyter Notebook to learn how to clean up and extract insights from large datasets. Here&amp;rsquo;s an example of discovering the relationship between player height and win %.
What advantage does height infer in Women&amp;rsquo;s Tennis? Using dataset: https://www.kaggle.com/joaoevangelista/wta-matches-and-rankings#wta.zip
import pandas as pd %matplotlib inline import matplotlib.pyplot as plt df = pd.read_csv(&#39;/Users/sam/Downloads/wta/matches.csv&#39;, low_memory=False, dtype={ }) df.shape  (50577, 33)  df.head()   .</description>
    </item>
    
  </channel>
</rss>