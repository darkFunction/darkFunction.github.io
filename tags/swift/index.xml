<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Swift on Sam Taylor</title>
    <link>https://darkfunction.github.io/tags/swift/</link>
    <description>Recent content in Swift on Sam Taylor</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sat, 13 Oct 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://darkfunction.github.io/tags/swift/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ticket Samaritan</title>
      <link>https://darkfunction.github.io/posts/ticketsamaritan/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://darkfunction.github.io/posts/ticketsamaritan/</guid>
      <description>Built a website and API backend (https://www.ticketsamaritan.uk/) using Vapor after attending Serverside.swift conference in Berlin. I explored serverless technologies offered by IBM but ultimately Vapor turned out to be a great option and Vapor Cloud especially makes for easy deployment and database hosting.
The hardest part was getting presigned forms working for user image uploads to Amazon S3. I released a tiny util for generating form policies.
The site is for travellers to share free tickets and has received postive responses on Reddit.</description>
    </item>
    
    <item>
      <title>Playing with the Bitcoin protocol in Swift</title>
      <link>https://darkfunction.github.io/posts/swiftbtc/</link>
      <pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://darkfunction.github.io/posts/swiftbtc/</guid>
      <description>Wanted to explore the Bitcoin protocol in a more hands-on way so wrote an application in Swift which can generate Bitcoin addresses and establish a connection to a node on the network, exchanging version information.
Source code here: https://github.com/darkfunction/swiftbtc</description>
    </item>
    
  </channel>
</rss>